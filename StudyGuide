Devops Study:

What is DEVOPS:

DEVOPS are a set of best practices  that combines SOFTWARE DEVELOPMENT & IT OPERATIONS together to shorten SLDC(Software Development Life Cycle) and to deliver quality softwares.

Key principles include : collabration, automation, CI - Continous Integration, CD - Continous Delivery & Deployment, Feedback loops

Components of CI/CD pipeline:

SOURCE CONTROL
BUILD AUTOMATION
AUTOMATED TESTING
DELIVER
DEPLOY
MONITORING

Configuration Management maintain a constitency of the system configuration accross the entire SLDC. It involves tracking and controlling changes in infrastructure, code, app configuration to ensure each enviornement stable and reproducible.


IAAC -- Infrastructure As Code
Process of managing and provisioning the infrastrasture through code. Instead of manaual process, devops team can automate the setup, deployment and management configuration using tools like Terraform, Ansible, and chef


Containerization:
It is a process of packing the application along with its dependencies and configuration into a single lightweight portable container that allow constitency and reproduciable deployment accross differnet environment.
It help faster deployment, better resource utilization, easier scaling

Monolith Vs Micorservice Architecture:

Monolith is a single tiered software application where all components and servics are combined in a single unit. Tighly coupled with each other. It is easier to deploy.

Microservice is comprises of multiple loosly coupled services joined together in which all the services can easily deployed, scaled, developed independently. It provide Scalability, Manintainability, Fault Tolerence


LOGGING AND MONITORING:

They are essential for maintaining health and performance of a DevOps Environment
Monitoring - Collecting, processing, analysing the perfornace metrics and system health indicators in realtime or near-real time to identify the issue such as bottlenecks, resource constraints, potential failure, predictive maintaenace. Promethious, Grafana, AppDynamics, Datalog, New Relic
Logging - recording events, messages, errors and other relevant data generated by application and infrastructure components. for troubleshooting and analysis, debugging and understand the behavior of the system. It help to identify the pattterns and anomalities and root cause of the issue . ELK stack, Kibana, Splunk

Most popular tools:

Version Control : Github, GIT
CI - Jenkins, Travis CI
Configuration Management - Ansible, chef, puppet
Containarization : Docker , Kubernetes
IAAS - TerraForm, CloudFormation
Monitoring And Logging : Prometus, ELK stack , Splunk, Grafna, Datalog


CI - Continous Integration:
It is practice of frequently merging the code into central repositories and running automated tests to ensure the code stability. Each integration followed by automated build and tests to catch and fix integration errorrs. 
CD - Contious Delivery: 
It extends the CI automatically by pushing changes through the pipelines to  staging environment, where they can easily reviewed and approved for PROD.
Continous Deployment: Eliminating the need of manual approval of changes before they are released into production. As llong as the changes pass all the automated test and check, they are automatically deployed to PROD.

GIT - Version Control. Multiple developers can collabrate the codebase simutanesioly. they create theirown branch and push the code code to the main repositorey. Rollback is also can do here.

Blue- Green Deployment:
It is a release management strategy that involves running to identical PROD Environment. At any given point of time, one env is live, where the other servives as a staging env for testing the new release. 

Rollback are essential for quick recovering from Faulty deployment and Configuration changes.

--> Version control Changes to revert code changes. 
--> Leverage IAAC
--> Blue- green deployment 
--> Monitor and Log Deployment

Best Practices in DEVOPS:

Regualarly conducting Security Risk assessment and Audits
Secure coding practice and code reviews
Automated security testing tools
Create a SAND-BOX envirnment to developing without affecting other systems
Ensure the Network and infrastructure best practices - firewalls, encryption, Access control
Monitoring and logging the security events
DevSecOps best practices


SHIFT-LEFT:
Address the potential issues such as bugs, performance problems, security vulerarites in the early in the developement process rather than later in the pipeline. Catching the fix the issue at the early stage of the developent process reduce the overall costs and better quality.




